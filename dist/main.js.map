{"version":3,"file":"main.js","mappings":"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","sources":["webpack://snacke/./src/game.js","webpack://snacke/./src/game_view.js","webpack://snacke/./src/levels.js","webpack://snacke/./src/obstacle.js","webpack://snacke/./src/snack.js","webpack://snacke/./src/snake.js","webpack://snacke/./src/util.js","webpack://snacke/webpack/bootstrap","webpack://snacke/./src/index.js"],"sourcesContent":["const Snake = require(\"./snake.js\")\r\nconst Snack = require(\"./snack.js\")\r\nconst Util = require(\"./util.js\");\r\nconst Obstacle = require(\"./obstacle.js\");\r\nconst Level = require(\"./levels.js\");\r\nconst ANIMALS = [\r\n    \"beaver\",\"cat\",\"dog\",\"fish\",\"frog\",\"lizard\",\"monkey\",\"pig\",\r\n    \"rabbit\",\"raccoon\",\"rat\",\"snail\",\"squirrel\",\"turtle\",\"snake\"\r\n];\r\nconst OBSTACLES = [\"fire\",\"ice\",\"log\",\"rock\",\"water\",\"tornado\"];\r\n\r\nfunction Game(dimX,dimY){\r\n    this.DIM_X = dimX;\r\n    this.DIM_Y = dimY;\r\n    this.snacks = [];\r\n    this.obstacles = [];\r\n    this.lives = 5;\r\n    this.level = 0;\r\n    this.over = false;\r\n    this.img = new Image();\r\n    this.img.src = \"grass.jpg\";\r\n    this.menu = ANIMALS.slice(0,14); //make a default menu\r\n    this.paused = true;\r\n    this.message = \"PRESS SPACE TO PLAY\"\r\n    this.topLogs = [];\r\n    this.bottomLogs = [];\r\n    this.maxSnacks = 3;\r\n    this.winLength = 100;\r\n    this.snake = new Snake(this);\r\n\r\n    this.startLevel();\r\n}\r\n\r\nGame.prototype.randomPos = function(rad){\r\n    return [Math.random()*this.DIM_X,Math.random()*this.DIM_Y];\r\n}\r\n\r\nGame.prototype.allObjects = function(){\r\n    return this.obstacles.concat([this.snake]).concat(this.snacks);\r\n}\r\n\r\nGame.prototype.startLevel = function(){\r\n    this.snacks = [];\r\n    this.obstacles = [];\r\n    this.topLogs = [];\r\n    this.bottomLogs = [];\r\n    this.level++;\r\n    while(this.snacks.length<this.maxSnacks){this.makeSnack()}\r\n\r\n    new Level(this,this.level);\r\n    this.snake.reset();\r\n\r\n    this.drawBottomLogs = false;\r\n    let that = this;\r\n    setInterval( () => that.drawBottomLogs = true, 1500);\r\n}\r\n\r\nGame.prototype.makeSnack = function(){\r\n    let animal = this.menu[Math.floor(this.menu.length*Math.random())];\r\n    let newSnack = new Snack([0,0],animal);\r\n    while( Util.outOfBounds(newSnack.pos,this,newSnack.radius) ){\r\n        newSnack.pos = this.randomPos(newSnack.rad);\r\n    }\r\n    this.snacks.push( newSnack );\r\n}\r\n\r\nGame.prototype.makeObstacle = function(pos,type){\r\n    if(type!=\"log\"){\r\n        this.obstacles.push( new Obstacle( pos, type ));\r\n    } else if(pos[1]<this.DIM_Y/2){\r\n        this.topLogs.push( new Obstacle( pos, type ));\r\n    } else {\r\n        this.bottomLogs.push( new Obstacle( pos, type ));\r\n    }\r\n}\r\n\r\nGame.prototype.draw = function(context,info){\r\n    context.drawImage(this.img,0,0);\r\n    this.allObjects().forEach( (obj) => obj.draw(context) );\r\n    if(this.snake.maxLength < this.winLength){\r\n        this.topLogs.forEach( (obj) => obj.draw(context) );\r\n    }\r\n    if(this.drawBottomLogs){\r\n        this.bottomLogs.forEach( (obj) => obj.draw(context) );\r\n    }\r\n\r\n    this.drawInfo(info);\r\n    if(this.paused || this.over){\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"white\";\r\n        if(this.over){ context.fillStyle = \"red\"; }\r\n        context.font = \"96px serif\";\r\n        context.fillText(this.message,this.DIM_X/2,this.DIM_Y/2);\r\n    }\r\n}\r\n\r\nGame.prototype.drawInfo = function(info){\r\n    const icons = this.setIcons();\r\n    info.fillStyle = 'gray';\r\n    info.fillRect(0,0,400,600);\r\n    info.fillStyle = 'black';\r\n    info.font = '24px Caveat Brush';\r\n    info.fillText('Lives:', 10, 25);\r\n    for(let i=0;i<this.lives;i++){\r\n        info.drawImage(icons[\"snake\"],70+(35*i),2.5,30,30);\r\n    }\r\n    info.fillText('Menu:', 10, 75);\r\n    for(let i=0;i<this.menu.length && i <9;i++){\r\n        info.drawImage(icons[this.menu[i]],75+(35*i),52.5,30,30);\r\n    }\r\n    for(let i=9;i<this.menu.length && i<16;i++){\r\n        info.drawImage(icons[this.menu[i]],75+(35*(i-9)),82.5,30,30);\r\n    }\r\n    info.fillText(`Stomach:`, 10, 145);\r\n    for(let i=0;i<this.snake.stomach.length && i <8;i++){\r\n        info.drawImage(icons[this.snake.stomach[i]],100+(35*i),122.5,30,30);\r\n    }\r\n    for(let i=8;i<this.snake.stomach.length && i<16;i++){\r\n        info.drawImage(icons[this.snake.stomach[i]],100+(35*(i-8)),152.5,30,30);\r\n    }\r\n    info.fillText(`Powers:`, 10, 215);\r\n    info.fillText(`Length: ${this.snake.maxLength} mm`, 10, 265);\r\n    info.fillText(`Level: ${this.level}`, 10, 315);\r\n\r\n}\r\n\r\nGame.prototype.setIcons = function(){\r\n    let icons = {}\r\n    ANIMALS.forEach( function(animal) {\r\n        icons[animal] = new Image();\r\n        icons[animal].src = `./emojis/${animal}.png`;\r\n    });\r\n    return icons;\r\n}\r\n\r\nGame.prototype.moveObjects = function(){\r\n    this.snake.move();\r\n}\r\n\r\nGame.prototype.step = function(){\r\n    if(!this.over && !this.paused){\r\n        this.moveObjects();\r\n        this.checkCollisions();\r\n    }\r\n}\r\n\r\nGame.prototype.checkCollisions = function(){\r\n    let snake = this.snake;\r\n    let game = this;\r\n    if(snake.nextLevel()){\r\n        this.startLevel();\r\n        return;\r\n        }\r\n    if(snake.outOfBounds()){\r\n        snake.hurt();\r\n    }\r\n    if(snake.selfBite()){\r\n        this.lives--;\r\n        snake.hurt();\r\n    }\r\n\r\n    // Check for eating\r\n    this.snacks.forEach( function(snack){\r\n        if(Util.hypotenuse(snack.pos,snake.pos)<snake.headRadius+snack.radius){\r\n            snake.eat(snack);\r\n            game.makeSnack();\r\n        }\r\n    });\r\n\r\n    // Check for obstacles\r\n    this.obstacles.forEach( function(obstacle){\r\n        if(Util.hypotenuse(obstacle.pos,snake.pos)<snake.headRadius+obstacle.radius/2){\r\n            snake.hit(obstacle);\r\n        }\r\n    })\r\n}\r\n\r\nGame.prototype.destroy = function(obj){\r\n    this.snacks.splice(this.snacks.indexOf(obj),1);\r\n}\r\n\r\nGame.prototype.pause = function(){\r\n    if(!this.paused){\r\n        this.paused = true;\r\n        this.message = \"GAME PAUSED\";\r\n    } else { this.paused = false}\r\n}\r\n\r\nmodule.exports = Game;","const Game = require(\"./game.js\");\r\nconst Snake = require(\"./snake.js\");\r\n\r\nfunction GameView(game,ctx,info){\r\n    this.game = game;\r\n    this.ctx = ctx;\r\n    this.info = info;\r\n    this.snake;\r\n    const boundDraw = this.game.draw.bind(this.game)\r\n\r\n}\r\n\r\nGameView.prototype.start = function(){\r\n    let that = this;\r\n    const drawInt = setInterval(that.game.draw.bind(that.game,that.ctx,that.info),20);\r\n    const stepInt = setInterval(that.game.step.bind(that.game),20);\r\n    this.bindKeyHandlers();\r\n}\r\n\r\n\r\n\r\nGameView.prototype.bindKeyHandlers = function(){\r\n    this.snake = this.game.snake;\r\n\r\n    key('w', () => { this.snake.turn([0,-1]) });\r\n    key('a', () => { this.snake.turn([-1,0]) });\r\n    key('s', () => { this.snake.turn([0,+1]) });\r\n    key('d', () => { this.snake.turn([+1,0]) });\r\n    key('up', () => { this.snake.turn([0,-1]) });\r\n    key('left', () => { this.snake.turn([-1,0]) });\r\n    key('down', () => { this.snake.turn([0,+1]) });\r\n    key('right', () => { this.snake.turn([+1,0]) });\r\n    key('space', () => { this.game.pause() });\r\n    key('esc', () => { alert('<GAME PAUSED>')});\r\n}\r\n\r\n\r\nmodule.exports = GameView;","function Level(game, num){\r\n    const OBSTACLES = [\"fire\",\"ice\",\"log\",\"rock\",\"water\",\"tornado\"];\r\n    const obstacles = {};\r\n    OBSTACLES.forEach( ele => obstacles[ele] = [] );\r\n\r\n    for(let i=0;i<game.DIM_Y;i+=30){\r\n        obstacles[\"rock\"].push([10,i]);\r\n        obstacles[\"rock\"].push([game.DIM_X-10,i]);\r\n    }\r\n    for(let i=0;i<game.DIM_X;i+=30){\r\n        if(i<game.DIM_X/2-50 || i>game.DIM_X/2+50){\r\n            obstacles[\"rock\"].push([i,10]);\r\n            obstacles[\"rock\"].push([i,game.DIM_Y-10]);\r\n        }\r\n    }\r\n    for(let i=game.DIM_X/2-45;i<game.DIM_X/2+75;i+=30){\r\n        obstacles[\"log\"].push([i,10]);\r\n        obstacles[\"log\"].push([i,game.DIM_Y-10]);\r\n    }\r\n\r\n    switch(num){\r\n        case 1:\r\n            obstacles[\"water\"].push([game.DIM_X/2,game.DIM_Y/2]);\r\n            break;\r\n        case 2:\r\n            obstacles[\"fire\"].push([game.DIM_X/4,game.DIM_Y/4]);\r\n            obstacles[\"water\"].push([3*game.DIM_X/4,3*game.DIM_Y/4]);\r\n            obstacles[\"ice\"].push([3*game.DIM_X/4,game.DIM_Y/4]);\r\n            obstacles[\"tornado\"].push([game.DIM_X/4,3*game.DIM_Y/4]);\r\n            break;\r\n        case 3:\r\n            for(let i=150;i<=game.DIM_Y-150;i+=25){\r\n                for(let j=300; j<=game.DIM_X-300; j+=25){\r\n                    obstacles[\"ice\"].push([j,i]);\r\n                }\r\n                obstacles[\"fire\"].push([100,i]);\r\n                obstacles[\"fire\"].push([game.DIM_X-100,i]);\r\n                obstacles[\"water\"].push([275,i]);\r\n                obstacles[\"water\"].push([game.DIM_X-275,i]);\r\n            }\r\n            break;\r\n        case 4:\r\n            for(let i=(game.DIM_X/2)-200;i<=(game.DIM_X/2)+200;i+=25){\r\n                obstacles[\"water\"].push([i,game.DIM_Y/2]);\r\n            }\r\n            for(let i=25; i<(game.DIM_X/2)-200; i+=25){\r\n                obstacles[\"tornado\"].push([i,i]);\r\n                obstacles[\"tornado\"].push([game.DIM_X-i,i]);\r\n                obstacles[\"tornado\"].push([i,game.DIM_Y-i]);\r\n                obstacles[\"tornado\"].push([game.DIM_X-i,game.DIM_Y-i]);\r\n            }\r\n            break;\r\n\r\n    }\r\n\r\n    OBSTACLES.forEach( function(ele){\r\n        for(let j = 0; j < obstacles[ele].length; j ++){\r\n            game.makeObstacle(obstacles[ele][j],ele);\r\n        }\r\n    })\r\n}\r\n\r\nmodule.exports = Level;","function Obstacle(pos,type){\r\n    this.pos = pos;\r\n    this.type = type;\r\n    this.radius = 20;\r\n    this.img = new Image();\r\n    this.img.src = `./obstacles/${type}.png`;\r\n}\r\n\r\nObstacle.prototype.draw = function(ctx){\r\n    ctx.drawImage(this.img,this.pos[0]-this.radius,this.pos[1]-this.radius,this.radius*2,this.radius*2);\r\n}\r\n\r\nObstacle.prototype.move = function(){}\r\n\r\nmodule.exports = Obstacle;","function Snack(pos,type){\r\n    this.pos = pos;\r\n    this.type = type;\r\n    this.color = 'red'\r\n    this.radius = 30;\r\n    this.img = new Image();\r\n    this.img.src = `./emojis/${type}.png`;\r\n}\r\n\r\nSnack.prototype.draw = function(ctx){\r\n    ctx.drawImage(this.img,\r\n        this.pos[0]-this.radius,\r\n        this.pos[1]-this.radius,\r\n        this.radius*2,this.radius*2);\r\n}\r\n\r\nSnack.prototype.move = function(){}\r\n\r\nmodule.exports = Snack;","// const Game = require(\"./game.js\");\r\nconst Util = require(\"./util.js\");\r\n\r\nfunction Snake(game){\r\n    this.game = game;\r\n    this.headRadius = 20;\r\n    this.color = '#0BDA51';\r\n    this.reset();\r\n}\r\n\r\nSnake.prototype.reset = function(){\r\n    this.pos = [this.game.DIM_X/2,this.game.DIM_Y-50];\r\n    this.vel = [0,-1];\r\n    this.speed = 8;\r\n    this.body = [];\r\n    this.maxLength = 40;\r\n    this.stomach = [];\r\n    this.stomachSize = 9;\r\n    this.invincible = false;\r\n}\r\n\r\nSnake.prototype.move = function(){\r\n    this.body.unshift(this.pos.slice())\r\n    if(this.body.length>=this.maxLength){this.body.pop()}\r\n    this.pos[0] += this.speed * this.vel[0];\r\n    this.pos[1] += this.speed * this.vel[1];\r\n}\r\n\r\nSnake.prototype.draw = function(ctx){\r\n    \r\n    let angle = Util.direction(this.vel); \r\n    \r\n    // Draw snake's head\r\n    if(this.invincible && Math.random() > 0.5){\r\n        ctx.fillStyle = 'orange';\r\n    } else if(this.frozen){\r\n        ctx.fillStyle = '#ADD8E6';\r\n    } else{\r\n        ctx.fillStyle = this.color;\r\n    }\r\n\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(this.pos[0],this.pos[1],this.headRadius, angle+.3, angle + 3.5, false);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n    ctx.arc(this.pos[0],this.pos[1],this.headRadius, angle-.3, angle - 3.5, true);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    \r\n    // Draw snake's body\r\n    let bodyRadius = this.headRadius/1.5;\r\n    this.body.forEach( function(pos) {\r\n        ctx.beginPath();\r\n        ctx.arc(pos[0],pos[1],bodyRadius, 0, 6.28, false);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    });\r\n\r\n    // Draw snake's eye(s)\r\n    ctx.fillStyle = 'black'\r\n\r\n    let eyePos = this.pos.slice();\r\n    if(Util.direction(this.vel) === 0){\r\n        eyePos[0] += this.headRadius*this.vel[1]/2;\r\n        eyePos[1] -= Math.abs(this.headRadius*this.vel[0]/2);\r\n    } else {\r\n        eyePos[0] += this.headRadius*this.vel[1]/2;// Offset eyes perpendicular\r\n        eyePos[1] += this.headRadius*this.vel[0]/2;// to motion of snake.\r\n    }\r\n    if(this.game.over){ // X-eyes\r\n        ctx.beginPath();\r\n        ctx.moveTo(eyePos[0]+5, eyePos[1]+5);\r\n        ctx.lineTo(eyePos[0]-5, eyePos[1]-5);\r\n        ctx.stroke();  // X-eyes\r\n        ctx.beginPath();\r\n        ctx.moveTo(eyePos[0]-5, eyePos[1]+5);\r\n        ctx.lineTo(eyePos[0]+5, eyePos[1]-5);\r\n        ctx.stroke(); \r\n    } else { // regular eyes\r\n        ctx.beginPath();\r\n        ctx.arc(eyePos[0], eyePos[1], 2.5, 0, 6.28, false);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    \r\n}\r\n\r\nSnake.prototype.turn = function(newVel){\r\n    if(JSON.stringify(Util.scale(newVel,-1)) != JSON.stringify(this.vel)){\r\n        if(!this.frozen){this.vel = newVel;}\r\n    }\r\n}\r\n\r\nSnake.prototype.outOfBounds = function(){\r\n    return Util.outOfBounds(this.pos,this.game,this.headRadius)\r\n}\r\n\r\nSnake.prototype.selfBite = function(){\r\n    let result = false;\r\n    let headPos = this.pos;\r\n    let speed = this.speed\r\n    this.body.forEach( function(pos){\r\n        if(Util.hypotenuse(pos,headPos)<speed){\r\n            result = true;\r\n        }\r\n    })\r\n    return result;\r\n}\r\n\r\nSnake.prototype.eat = function(snack){\r\n    this.maxLength += 20;\r\n    this.stomach.unshift(snack.type);\r\n    if(this.stomach.length>this.stomachSize){this.stomach.pop()};\r\n    this.game.destroy(snack);\r\n}\r\n\r\nSnake.prototype.stomachContains = function(animal,num){\r\n    let count = 0;\r\n    this.stomach.forEach( function(element){\r\n        if(animal===element){count++;}\r\n    });\r\n    return count>=num;\r\n}\r\n\r\nSnake.prototype.hurt = function(){\r\n    if(!this.invincible){\r\n        this.game.lives--;\r\n        this.invincible = true;\r\n        let that = this;\r\n        setTimeout( function(){ that.invincible = false;}, 1500)\r\n    }\r\n    if(this.game.lives <= 0){\r\n        this.game.over = true;\r\n        this.game.message = \"YOU DIED\"\r\n    }\r\n}\r\n\r\nSnake.prototype.nextLevel = function(){\r\n    return this.maxLength >= this.game.winLength &&\r\n    this.pos[0] > this.game.DIM_X/2-50 &&\r\n    this.pos[0] < this.game.DIM_X/2+50 &&\r\n    this.pos[1] < 20;\r\n}\r\n\r\nSnake.prototype.hit = function(obstacle){\r\n    if(obstacle.type===\"water\"||obstacle.type===\"fire\"){\r\n        this.hurt();\r\n    }\r\n    if(obstacle.type===\"ice\"){\r\n        this.frozen = true;\r\n        let that = this;\r\n        clearTimeout(this.frozenTime);\r\n        this.frozenTime = setTimeout( () => {\r\n            that.frozen = false;\r\n        }, 100);\r\n    }\r\n    if(obstacle.type===\"tornado\"){\r\n        const vels = [[1,0],[-1,0],[0,1],[0,-1]]\r\n        if(!this.tornadoProof){\r\n            if(this.vel[0]===0){\r\n                this.vel = vels[Math.floor(2*Math.random())];\r\n            } else if(this.vel[1]===0){\r\n                this.vel = vels[Math.floor(2+2*Math.random())];\r\n            }\r\n            this.tornadoProof = true;\r\n            let that = this;\r\n            clearTimeout(this.tornadoTime);\r\n            this.tornadoTime = setTimeout( () => {\r\n                that.tornadoProof = false;\r\n            }, 800);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Snake;","const Util = {\r\n    // inherits(childClass, parentClass) {\r\n    //     function Surrogate() {}\r\n    //     Surrogate.prototype = parentClass.prototype;\r\n    //     childClass.prototype = new Surrogate();\r\n    //     childClass.prototype.constructor = childClass;\r\n    // },\r\n\r\n    // randomVec(length) {\r\n    //     const deg = 2 * Math.PI * Math.random();\r\n    //     return Util.scale([Math.sin(deg), Math.cos(deg)], length);\r\n    // },\r\n    \r\n    // Scale the length of a vector by the given amount.\r\n    scale(vec, m) {\r\n        return [vec[0] * m, vec[1] * m];\r\n    },\r\n\r\n    // Find the distance between two positions.\r\n    hypotenuse(pos1,pos2){\r\n        return Math.hypot((pos1[0]-pos2[0]),(pos1[1]-pos2[1]))\r\n    },\r\n    \r\n    direction(vel){\r\n        return Math.atan2(vel[1],vel[0]);\r\n    },\r\n\r\n    outOfBounds(pos,game,rad){\r\n        if(pos[0]<=rad ||\r\n            pos[1]<=rad ||\r\n            pos[0]>=game.DIM_X-rad ||\r\n            pos[1]>=game.DIM_Y-rad){\r\n                return true;\r\n            }\r\n        return false;\r\n    }\r\n};\r\n\r\nmodule.exports = Util;\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const Snake = require(\"./snake.js\");\r\nconst Game = require(\"./game.js\")\r\nconst GameView = require(\"./game_view.js\")\r\n\r\nwindow.addEventListener(\r\n    \"keydown\",\r\n    (e) => {\r\n      if (\r\n        [\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].includes(\r\n          e.code\r\n        )\r\n      ) {\r\n        e.preventDefault();\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const canvasEl = document.getElementById('game-canvas');\r\n    const WIDTH = 1000;\r\n    const HEIGHT = 600;\r\n    canvasEl.width = WIDTH;\r\n    canvasEl.height = HEIGHT;\r\n    \r\n    const ctx = canvasEl.getContext('2d');\r\n\r\n    const canvasInfo = document.getElementById('info-canvas');\r\n    canvasInfo.width = 400;\r\n    canvasInfo.height = HEIGHT;\r\n    const info = canvasInfo.getContext('2d');\r\n\r\n    let game = new Game(WIDTH,HEIGHT);\r\n    let gv = new GameView(game,ctx,info);\r\n    gv.start();\r\n    \r\n})"],"names":["Snake","require","Snack","Util","Obstacle","Level","ANIMALS","Game","dimX","dimY","this","DIM_X","DIM_Y","snacks","obstacles","lives","level","over","img","Image","src","menu","slice","paused","message","topLogs","bottomLogs","maxSnacks","winLength","snake","startLevel","prototype","randomPos","rad","Math","random","allObjects","concat","length","makeSnack","reset","drawBottomLogs","that","setInterval","animal","floor","newSnack","outOfBounds","pos","radius","push","makeObstacle","type","draw","context","info","drawImage","forEach","obj","maxLength","drawInfo","textAlign","fillStyle","font","fillText","icons","setIcons","fillRect","i","stomach","moveObjects","move","step","checkCollisions","game","nextLevel","hurt","selfBite","snack","hypotenuse","headRadius","eat","obstacle","hit","destroy","splice","indexOf","pause","module","exports","GameView","ctx","bind","start","bindKeyHandlers","key","turn","alert","num","OBSTACLES","ele","j","color","vel","speed","body","stomachSize","invincible","unshift","pop","angle","direction","frozen","beginPath","arc","closePath","fill","bodyRadius","eyePos","abs","moveTo","lineTo","stroke","newVel","JSON","stringify","scale","result","headPos","stomachContains","count","element","setTimeout","clearTimeout","frozenTime","vels","tornadoProof","tornadoTime","vec","m","pos1","pos2","hypot","atan2","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","window","addEventListener","e","includes","code","preventDefault","document","canvasEl","getElementById","width","height","getContext","canvasInfo"],"sourceRoot":""}